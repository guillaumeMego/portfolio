#!/bin/bash

# üîç Script de V√©rification Locale - Guillaume Ganne
# V√©rifie la configuration locale avant d√©ploiement

echo "üîç V√©rification Locale - Configuration des URLs"
echo "================================================"
echo ""

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìÅ V√©rification des fichiers de configuration${NC}"
echo ""

# V√©rifier next.config.js
if [ -f "next.config.js" ]; then
    echo -e "${GREEN}‚úÖ next.config.js trouv√©${NC}"
    
    # V√©rifier trailingSlash
    if grep -q "trailingSlash: true" next.config.js; then
        echo -e "${GREEN}‚úÖ trailingSlash: true configur√©${NC}"
    else
        echo -e "${RED}‚ùå trailingSlash: true manquant${NC}"
    fi
    
    # V√©rifier les redirections
    if grep -q "redirects()" next.config.js; then
        echo -e "${GREEN}‚úÖ Fonction redirects() pr√©sente${NC}"
    else
        echo -e "${RED}‚ùå Fonction redirects() manquante${NC}"
    fi
else
    echo -e "${RED}‚ùå next.config.js manquant${NC}"
fi

echo ""

# V√©rifier next-sitemap.config.js
if [ -f "next-sitemap.config.js" ]; then
    echo -e "${GREEN}‚úÖ next-sitemap.config.js trouv√©${NC}"
    
    # V√©rifier generateRobotsTxt
    if grep -q "generateRobotsTxt: true" next-sitemap.config.js; then
        echo -e "${GREEN}‚úÖ generateRobotsTxt: true configur√©${NC}"
    else
        echo -e "${RED}‚ùå generateRobotsTxt: true manquant${NC}"
    fi
    
    # V√©rifier siteUrl
    if grep -q "siteUrl: 'https://www.guillaumeganne.com'" next-sitemap.config.js; then
        echo -e "${GREEN}‚úÖ siteUrl correctement configur√©${NC}"
    else
        echo -e "${RED}‚ùå siteUrl incorrect${NC}"
    fi
else
    echo -e "${RED}‚ùå next-sitemap.config.js manquant${NC}"
fi

echo ""

# V√©rifier package.json
if [ -f "package.json" ]; then
    echo -e "${GREEN}‚úÖ package.json trouv√©${NC}"
    
    # V√©rifier le script postbuild
    if grep -q '"postbuild": "next-sitemap"' package.json; then
        echo -e "${GREEN}‚úÖ Script postbuild configur√©${NC}"
    else
        echo -e "${RED}‚ùå Script postbuild manquant${NC}"
    fi
else
    echo -e "${RED}‚ùå package.json manquant${NC}"
fi

echo ""

# V√©rifier les fichiers g√©n√©r√©s
echo -e "${BLUE}üìÑ V√©rification des fichiers g√©n√©r√©s${NC}"
echo ""

if [ -f "public/sitemap.xml" ]; then
    echo -e "${GREEN}‚úÖ sitemap.xml g√©n√©r√©${NC}"
else
    echo -e "${RED}‚ùå sitemap.xml manquant${NC}"
fi

if [ -f "public/sitemap-0.xml" ]; then
    echo -e "${GREEN}‚úÖ sitemap-0.xml g√©n√©r√©${NC}"
else
    echo -e "${RED}‚ùå sitemap-0.xml manquant${NC}"
fi

if [ -f "public/robots.txt" ]; then
    echo -e "${GREEN}‚úÖ robots.txt g√©n√©r√©${NC}"
else
    echo -e "${RED}‚ùå robots.txt manquant${NC}"
fi

echo ""

# V√©rifier le contenu du sitemap
echo -e "${BLUE}üîç V√©rification du contenu du sitemap${NC}"
echo ""

if [ -f "public/sitemap-0.xml" ]; then
    # Compter les URLs avec trailing slash
    trailing_slash_count=$(grep -c "https://www.guillaumeganne.com/.*/" public/sitemap-0.xml)
    total_urls=$(grep -c "<loc>" public/sitemap-0.xml)
    
    echo "Total URLs dans le sitemap: $total_urls"
    echo "URLs avec trailing slash: $trailing_slash_count"
    
    if [ "$trailing_slash_count" -eq "$total_urls" ]; then
        echo -e "${GREEN}‚úÖ Toutes les URLs ont un trailing slash${NC}"
    else
        echo -e "${RED}‚ùå Certaines URLs n'ont pas de trailing slash${NC}"
    fi
    
    # V√©rifier la pr√©sence des pages principales
    echo ""
    echo "Pages principales dans le sitemap:"
    
    if grep -q "https://www.guillaumeganne.com/contact/" public/sitemap-0.xml; then
        echo -e "${GREEN}‚úÖ /contact/ pr√©sent${NC}"
    else
        echo -e "${RED}‚ùå /contact/ manquant${NC}"
    fi
    
    if grep -q "https://www.guillaumeganne.com/a-propos/" public/sitemap-0.xml; then
        echo -e "${GREEN}‚úÖ /a-propos/ pr√©sent${NC}"
    else
        echo -e "${RED}‚ùå /a-propos/ manquant${NC}"
    fi
    
    if grep -q "https://www.guillaumeganne.com/tarif/" public/sitemap-0.xml; then
        echo -e "${GREEN}‚úÖ /tarif/ pr√©sent${NC}"
    else
        echo -e "${RED}‚ùå /tarif/ manquant${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üìã R√©sum√© de la v√©rification${NC}"
echo "=================================="

# Compter les erreurs
errors=0
if ! grep -q "trailingSlash: true" next.config.js; then ((errors++)); fi
if ! grep -q "generateRobotsTxt: true" next-sitemap.config.js; then ((errors++)); fi
if ! grep -q '"postbuild": "next-sitemap"' package.json; then ((errors++)); fi
if [ ! -f "public/sitemap.xml" ]; then ((errors++)); fi
if [ ! -f "public/robots.txt" ]; then ((errors++)); fi

if [ $errors -eq 0 ]; then
    echo -e "${GREEN}üéâ Configuration locale parfaite ! Pr√™t pour le d√©ploiement.${NC}"
else
    echo -e "${RED}‚ùå $errors erreur(s) d√©tect√©e(s). Corrigez avant le d√©ploiement.${NC}"
fi

echo ""
echo "üîß Prochaines √©tapes :"
echo "1. D√©ployer sur Vercel"
echo "2. Configurer la redirection guillaumeganne.com ‚Üí www.guillaumeganne.com dans Vercel"
echo "3. V√©rifier la configuration DNS chez OVH"
echo "4. Tester avec le script test-redirects.sh apr√®s d√©ploiement"
